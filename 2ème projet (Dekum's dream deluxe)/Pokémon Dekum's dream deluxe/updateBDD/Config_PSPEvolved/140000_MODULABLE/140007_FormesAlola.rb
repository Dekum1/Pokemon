module POKEMON_S
  class Pokemon
     
    def alt_movepool_list
      list = []
      #--------------------------------------------------
      #---------- Definir les movepools ici -------------
       list.push([27, 1, [ [94, 1], [84, 1], [39, 1], [98, 1], [85, 1] ],[ 1, 4, 6, 10, 15, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 42, 43, 44, 45, 46, [4], [6] ],[ 3, 9, 117, 175, 179, 203, 217, 252, 268, 273, 321, 381, 518, 563 ]]) #Raichu d'Alola
       list.push([28, 1, [ [10, 1], [111, 1], [117, 3], [181, 5], [301, 7], [229, 9], [210, 11], [232, 14], [129, 17], [154, 20], [334, 23], [163, 26], [442, 30], [360, 34], [14, 38], [258, 42], [59, 46] ],[6, 7, 10, 11, 14, 17, 20, 21, 23, 26, 27, 28, 31, 32, 40, 42, 43, 44, 45, 46, [1], [4], [6], [8] ],[ 68, 133, 174, 203, 232, 306, 333, 400, 470, 519, 532 ]]) #Sabelette d'Alola
       list.push([29, 1, [ [368, 1], [519, 1], [163, 1], [111, 1], [301, 1], [232, 1], [333, 1] ],[6, 7, 10, 11, 14, 17, 20, 21, 23, 26, 27, 28, 31, 32, 40, 42, 43, 44, 45, 46, [1], [4], [6], [8] ],[ 68, 133, 174, 203, 232, 306, 333, 400, 470, 519, 532 ]]) #Sablaireau d'Alola
       list.push([39, 1, [ [181, 1], [39, 4], [46, 7], [420, 10], [109, 12], [196, 15], [371, 18], [54, 20], [562, 21], [185, 23], [485, 26], [62, 28], [326, 31], [219, 34], [58, 36], [286, 39], [59, 42], [288, 44], [445, 47], [329, 50] ],[ 5, 6, 7, 10, 13, 14, 17, 18, 20, 21, 27, 32, 42, 43, 44, 45 ],[ 50, 95, 97, 175, 180, 204, 227, 290, 326, 336, 384, 566 ]]) #Goupix d'Alola
       list.push([40, 1, [ [562, 1], [286, 1], [417, 1], [58, 1], [420, 1], [109, 1], [219, 1] ],[ 4, 5, 6, 7, 10, 13, 14, 15, 17, 18, 20, 21, 27, 32, 42, 43, 44, 45 ],[ 50, 95, 97, 175, 180, 204, 227, 290, 326, 336, 384, 566 ]]) #Feunard d'Alola
       list.push([81, 1, [ [33, 1], [111, 1], [268, 4], [397, 6], [205, 10], [209, 12], [88, 16], [496, 18], [9, 22], [120, 24], [446, 28], [350, 30], [435, 34], [153, 36], [38, 40], [444, 42] ],[1, 6, 10, 11, 17, 21, 24, 25, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 42, 43, 44, 45, [4], [5], [6], [8] ],[ 68, 103, 174, 175, 203, 335, 393, 431, 520, 534 ]]) #Racaillou d'Alola
       list.push([82, 1, [ [33, 1], [111, 1], [268, 4], [397, 6], [205, 10], [209, 12], [88, 16], [496, 18], [9, 22], [120, 24], [446, 30], [350, 34], [435, 40], [153, 44], [38, 50], [444, 54] ],[1, 6, 10, 11, 17, 21, 24, 25, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 42, 43, 44, 45, [4], [5], [6], [8] ],[ 68, 103, 174, 175, 203, 335, 393, 431, 520, 534 ]]) #Gravalanch d'Alola
       list.push([83, 1, [ [475, 1], [33, 1], [111, 1], [268, 4], [397, 6], [205, 10], [209, 12], [88, 16], [496, 18], [9, 22], [120, 24], [446, 30], [350, 34], [435, 40], [153, 44], [38, 50], [444, 54], [475, 60] ],[1, 5, 6, 10, 11, 15, 17, 21, 24, 25, 26, 27, 28, 31, 32, 34, 35, 37, 38, 39, 42, 43, 44, 45, [4], [5], [6], [8] ],[ 68, 103, 174, 175, 203, 335, 393, 431, 520, 534 ]]) #Grolem d'Alola
       list.push([110, 1, [ [402, 1], [140, 1], [95, 1], [93, 1], [406, 1], [486, 17], [121, 27], [452, 37], [437, 47] ],[ 6, 9, 10, 11, 15, 16, 17, 19, 21, 22, 26, 27, 29, 31, 32, 33, 35, 36, 42, 43, 44, 45, 46, 48, [4] ],[ 174, 202, 235, 236, 246, 267, 275, 285, 335, 363, 381, 384, 437 ]]) #Noadkoko d'Alola
       list.push([112, 1, [ [45, 1], [39, 1], [125, 1], [172, 1], [39, 3], [125, 7], [172, 11], [43, 13], [485, 17], [155, 21], [261, 23], [247, 27], [37, 33], [374, 37], [283, 49], [394, 53], [557, 59], [198, 65] ],[ 1, 6, 10, 11, 13, 14, 15, 17, 18, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 50, [4], [6], [8] ],[ 24, 103, 130, 187, 195, 197, 203, 246, 442, 532 ]]) #Ossatueur d'Alola
       list.push([1, 0, [nil], [10, [3]]])
       
       
       
       
       
      #---------------------------------------------------
      return list
    end
     
       
     
    def alt_movepool_test
      list = alt_movepool_list
      b = []
      for i in list
        return true if (i[0] == @id or i[0] == @name) and i[1] == @form
      end
       
      return false
    end
      
     
    def alt_movepool(erase = false)
       
      list = alt_movepool_list
      reprod = []
      skills = []
      ct = []
      if list != []
        list.each do |i|
          if (i[0] == @id or i[0] == @name) and i[1] == @form
            next if i[2] == nil
            i[2].each do |skill|
              next if skill == nil
              if skill[0].type == Fixnum
                skills.push(skill)
              else
                skills.push([Skill_Info.id(skill[0]), skill[1]])
              end
            end
            next if i[3] == nil
            i[3].each do |skill|
              next if skill == nil
              ct.push(skill)
            end
            next if i[4] == nil
            i[4].each do |skill|
              next if skill == nil
              if skill.type == Fixnum
                reprod.push(skill)
              else
                reprod.push(Skill_Info.id(skill))
              end
            end
          end
        end
      end
       
      if ct != [nil]
        @skills_allow = ct
      end
 
      if skills != [nil] and skills != []
        @skills_table = skills
        return if erase == false
        @skills_set = []
        initialize_skill
      end
    end
     
     
    def skills_allow
      return @skills_allow if alt_movepool_test
      return Pokemon_Info.skills_tech(id)
    end
     
     
    def breed_move
      return @breed_move if alt_movepool_test
      return Pokemon_Info.breed_move(id)
    end
     
    def refresh_skill(backscene = nil)
      alt_movepool
      for skill in @skills_table
        if skill[1] == @level and not(skill_learnt?(skill[0]))
          scene = Pokemon_Skill_Learn.new(self, skill[0], backscene)
          scene.main
        end
      end
    end
     
  end
end